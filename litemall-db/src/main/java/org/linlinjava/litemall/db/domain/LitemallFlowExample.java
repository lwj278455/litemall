package org.linlinjava.litemall.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallFlowExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    public LitemallFlowExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    public LitemallFlowExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    public LitemallFlowExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallFlowExample example = new LitemallFlowExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    public LitemallFlowExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    public LitemallFlowExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFlowNumIsNull() {
            addCriterion("flow_num is null");
            return (Criteria) this;
        }

        public Criteria andFlowNumIsNotNull() {
            addCriterion("flow_num is not null");
            return (Criteria) this;
        }

        public Criteria andFlowNumEqualTo(String value) {
            addCriterion("flow_num =", value, "flowNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andFlowNumEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("flow_num = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFlowNumNotEqualTo(String value) {
            addCriterion("flow_num <>", value, "flowNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andFlowNumNotEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("flow_num <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFlowNumGreaterThan(String value) {
            addCriterion("flow_num >", value, "flowNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andFlowNumGreaterThanColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("flow_num > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFlowNumGreaterThanOrEqualTo(String value) {
            addCriterion("flow_num >=", value, "flowNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andFlowNumGreaterThanOrEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("flow_num >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFlowNumLessThan(String value) {
            addCriterion("flow_num <", value, "flowNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andFlowNumLessThanColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("flow_num < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFlowNumLessThanOrEqualTo(String value) {
            addCriterion("flow_num <=", value, "flowNum");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andFlowNumLessThanOrEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("flow_num <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFlowNumLike(String value) {
            addCriterion("flow_num like", value, "flowNum");
            return (Criteria) this;
        }

        public Criteria andFlowNumNotLike(String value) {
            addCriterion("flow_num not like", value, "flowNum");
            return (Criteria) this;
        }

        public Criteria andFlowNumIn(List<String> values) {
            addCriterion("flow_num in", values, "flowNum");
            return (Criteria) this;
        }

        public Criteria andFlowNumNotIn(List<String> values) {
            addCriterion("flow_num not in", values, "flowNum");
            return (Criteria) this;
        }

        public Criteria andFlowNumBetween(String value1, String value2) {
            addCriterion("flow_num between", value1, value2, "flowNum");
            return (Criteria) this;
        }

        public Criteria andFlowNumNotBetween(String value1, String value2) {
            addCriterion("flow_num not between", value1, value2, "flowNum");
            return (Criteria) this;
        }

        public Criteria andPaidIntegralIsNull() {
            addCriterion("paid_integral is null");
            return (Criteria) this;
        }

        public Criteria andPaidIntegralIsNotNull() {
            addCriterion("paid_integral is not null");
            return (Criteria) this;
        }

        public Criteria andPaidIntegralEqualTo(String value) {
            addCriterion("paid_integral =", value, "paidIntegral");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andPaidIntegralEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("paid_integral = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidIntegralNotEqualTo(String value) {
            addCriterion("paid_integral <>", value, "paidIntegral");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andPaidIntegralNotEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("paid_integral <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidIntegralGreaterThan(String value) {
            addCriterion("paid_integral >", value, "paidIntegral");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andPaidIntegralGreaterThanColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("paid_integral > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidIntegralGreaterThanOrEqualTo(String value) {
            addCriterion("paid_integral >=", value, "paidIntegral");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andPaidIntegralGreaterThanOrEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("paid_integral >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidIntegralLessThan(String value) {
            addCriterion("paid_integral <", value, "paidIntegral");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andPaidIntegralLessThanColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("paid_integral < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidIntegralLessThanOrEqualTo(String value) {
            addCriterion("paid_integral <=", value, "paidIntegral");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andPaidIntegralLessThanOrEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("paid_integral <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidIntegralLike(String value) {
            addCriterion("paid_integral like", value, "paidIntegral");
            return (Criteria) this;
        }

        public Criteria andPaidIntegralNotLike(String value) {
            addCriterion("paid_integral not like", value, "paidIntegral");
            return (Criteria) this;
        }

        public Criteria andPaidIntegralIn(List<String> values) {
            addCriterion("paid_integral in", values, "paidIntegral");
            return (Criteria) this;
        }

        public Criteria andPaidIntegralNotIn(List<String> values) {
            addCriterion("paid_integral not in", values, "paidIntegral");
            return (Criteria) this;
        }

        public Criteria andPaidIntegralBetween(String value1, String value2) {
            addCriterion("paid_integral between", value1, value2, "paidIntegral");
            return (Criteria) this;
        }

        public Criteria andPaidIntegralNotBetween(String value1, String value2) {
            addCriterion("paid_integral not between", value1, value2, "paidIntegral");
            return (Criteria) this;
        }

        public Criteria andTotalIntegralIsNull() {
            addCriterion("total_integral is null");
            return (Criteria) this;
        }

        public Criteria andTotalIntegralIsNotNull() {
            addCriterion("total_integral is not null");
            return (Criteria) this;
        }

        public Criteria andTotalIntegralEqualTo(String value) {
            addCriterion("total_integral =", value, "totalIntegral");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andTotalIntegralEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("total_integral = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalIntegralNotEqualTo(String value) {
            addCriterion("total_integral <>", value, "totalIntegral");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andTotalIntegralNotEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("total_integral <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalIntegralGreaterThan(String value) {
            addCriterion("total_integral >", value, "totalIntegral");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andTotalIntegralGreaterThanColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("total_integral > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalIntegralGreaterThanOrEqualTo(String value) {
            addCriterion("total_integral >=", value, "totalIntegral");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andTotalIntegralGreaterThanOrEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("total_integral >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalIntegralLessThan(String value) {
            addCriterion("total_integral <", value, "totalIntegral");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andTotalIntegralLessThanColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("total_integral < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalIntegralLessThanOrEqualTo(String value) {
            addCriterion("total_integral <=", value, "totalIntegral");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andTotalIntegralLessThanOrEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("total_integral <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalIntegralLike(String value) {
            addCriterion("total_integral like", value, "totalIntegral");
            return (Criteria) this;
        }

        public Criteria andTotalIntegralNotLike(String value) {
            addCriterion("total_integral not like", value, "totalIntegral");
            return (Criteria) this;
        }

        public Criteria andTotalIntegralIn(List<String> values) {
            addCriterion("total_integral in", values, "totalIntegral");
            return (Criteria) this;
        }

        public Criteria andTotalIntegralNotIn(List<String> values) {
            addCriterion("total_integral not in", values, "totalIntegral");
            return (Criteria) this;
        }

        public Criteria andTotalIntegralBetween(String value1, String value2) {
            addCriterion("total_integral between", value1, value2, "totalIntegral");
            return (Criteria) this;
        }

        public Criteria andTotalIntegralNotBetween(String value1, String value2) {
            addCriterion("total_integral not between", value1, value2, "totalIntegral");
            return (Criteria) this;
        }

        public Criteria andPaidMethodIsNull() {
            addCriterion("paid_method is null");
            return (Criteria) this;
        }

        public Criteria andPaidMethodIsNotNull() {
            addCriterion("paid_method is not null");
            return (Criteria) this;
        }

        public Criteria andPaidMethodEqualTo(Integer value) {
            addCriterion("paid_method =", value, "paidMethod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andPaidMethodEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("paid_method = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidMethodNotEqualTo(Integer value) {
            addCriterion("paid_method <>", value, "paidMethod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andPaidMethodNotEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("paid_method <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidMethodGreaterThan(Integer value) {
            addCriterion("paid_method >", value, "paidMethod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andPaidMethodGreaterThanColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("paid_method > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidMethodGreaterThanOrEqualTo(Integer value) {
            addCriterion("paid_method >=", value, "paidMethod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andPaidMethodGreaterThanOrEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("paid_method >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidMethodLessThan(Integer value) {
            addCriterion("paid_method <", value, "paidMethod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andPaidMethodLessThanColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("paid_method < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidMethodLessThanOrEqualTo(Integer value) {
            addCriterion("paid_method <=", value, "paidMethod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andPaidMethodLessThanOrEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("paid_method <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidMethodIn(List<Integer> values) {
            addCriterion("paid_method in", values, "paidMethod");
            return (Criteria) this;
        }

        public Criteria andPaidMethodNotIn(List<Integer> values) {
            addCriterion("paid_method not in", values, "paidMethod");
            return (Criteria) this;
        }

        public Criteria andPaidMethodBetween(Integer value1, Integer value2) {
            addCriterion("paid_method between", value1, value2, "paidMethod");
            return (Criteria) this;
        }

        public Criteria andPaidMethodNotBetween(Integer value1, Integer value2) {
            addCriterion("paid_method not between", value1, value2, "paidMethod");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andUserIdEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("user_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andUserIdNotEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("user_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("user_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanOrEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("user_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("user_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanOrEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("user_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("user_id like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("user_id not like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<String> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<String> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNull() {
            addCriterion("user_name is null");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNotNull() {
            addCriterion("user_name is not null");
            return (Criteria) this;
        }

        public Criteria andUserNameEqualTo(String value) {
            addCriterion("user_name =", value, "userName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andUserNameEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("user_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserNameNotEqualTo(String value) {
            addCriterion("user_name <>", value, "userName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andUserNameNotEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("user_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThan(String value) {
            addCriterion("user_name >", value, "userName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andUserNameGreaterThanColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("user_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("user_name >=", value, "userName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andUserNameGreaterThanOrEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("user_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserNameLessThan(String value) {
            addCriterion("user_name <", value, "userName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andUserNameLessThanColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("user_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserNameLessThanOrEqualTo(String value) {
            addCriterion("user_name <=", value, "userName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andUserNameLessThanOrEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("user_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserNameLike(String value) {
            addCriterion("user_name like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotLike(String value) {
            addCriterion("user_name not like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameIn(List<String> values) {
            addCriterion("user_name in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotIn(List<String> values) {
            addCriterion("user_name not in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameBetween(String value1, String value2) {
            addCriterion("user_name between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotBetween(String value1, String value2) {
            addCriterion("user_name not between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(LitemallFlow.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_flow
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        private LitemallFlowExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        protected Criteria(LitemallFlowExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public LitemallFlowExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_flow
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_flow
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_flow
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallFlowExample example);
    }
}