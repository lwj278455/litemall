package org.linlinjava.litemall.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallUserRelationsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    public LitemallUserRelationsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    public LitemallUserRelationsExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    public LitemallUserRelationsExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallUserRelationsExample example = new LitemallUserRelationsExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    public LitemallUserRelationsExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    public LitemallUserRelationsExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFxlevelIsNull() {
            addCriterion("fxLevel is null");
            return (Criteria) this;
        }

        public Criteria andFxlevelIsNotNull() {
            addCriterion("fxLevel is not null");
            return (Criteria) this;
        }

        public Criteria andFxlevelEqualTo(Long value) {
            addCriterion("fxLevel =", value, "fxlevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andFxlevelEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("fxLevel = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFxlevelNotEqualTo(Long value) {
            addCriterion("fxLevel <>", value, "fxlevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andFxlevelNotEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("fxLevel <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFxlevelGreaterThan(Long value) {
            addCriterion("fxLevel >", value, "fxlevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andFxlevelGreaterThanColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("fxLevel > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFxlevelGreaterThanOrEqualTo(Long value) {
            addCriterion("fxLevel >=", value, "fxlevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andFxlevelGreaterThanOrEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("fxLevel >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFxlevelLessThan(Long value) {
            addCriterion("fxLevel <", value, "fxlevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andFxlevelLessThanColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("fxLevel < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFxlevelLessThanOrEqualTo(Long value) {
            addCriterion("fxLevel <=", value, "fxlevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andFxlevelLessThanOrEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("fxLevel <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFxlevelIn(List<Long> values) {
            addCriterion("fxLevel in", values, "fxlevel");
            return (Criteria) this;
        }

        public Criteria andFxlevelNotIn(List<Long> values) {
            addCriterion("fxLevel not in", values, "fxlevel");
            return (Criteria) this;
        }

        public Criteria andFxlevelBetween(Long value1, Long value2) {
            addCriterion("fxLevel between", value1, value2, "fxlevel");
            return (Criteria) this;
        }

        public Criteria andFxlevelNotBetween(Long value1, Long value2) {
            addCriterion("fxLevel not between", value1, value2, "fxlevel");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("userid is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("userid is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Long value) {
            addCriterion("userid =", value, "userid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andUseridEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("userid = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Long value) {
            addCriterion("userid <>", value, "userid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andUseridNotEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("userid <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Long value) {
            addCriterion("userid >", value, "userid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andUseridGreaterThanColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("userid > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Long value) {
            addCriterion("userid >=", value, "userid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andUseridGreaterThanOrEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("userid >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Long value) {
            addCriterion("userid <", value, "userid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andUseridLessThanColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("userid < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Long value) {
            addCriterion("userid <=", value, "userid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andUseridLessThanOrEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("userid <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Long> values) {
            addCriterion("userid in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Long> values) {
            addCriterion("userid not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Long value1, Long value2) {
            addCriterion("userid between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Long value1, Long value2) {
            addCriterion("userid not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andChildidIsNull() {
            addCriterion("childid is null");
            return (Criteria) this;
        }

        public Criteria andChildidIsNotNull() {
            addCriterion("childid is not null");
            return (Criteria) this;
        }

        public Criteria andChildidEqualTo(Long value) {
            addCriterion("childid =", value, "childid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andChildidEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("childid = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andChildidNotEqualTo(Long value) {
            addCriterion("childid <>", value, "childid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andChildidNotEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("childid <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andChildidGreaterThan(Long value) {
            addCriterion("childid >", value, "childid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andChildidGreaterThanColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("childid > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andChildidGreaterThanOrEqualTo(Long value) {
            addCriterion("childid >=", value, "childid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andChildidGreaterThanOrEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("childid >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andChildidLessThan(Long value) {
            addCriterion("childid <", value, "childid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andChildidLessThanColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("childid < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andChildidLessThanOrEqualTo(Long value) {
            addCriterion("childid <=", value, "childid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andChildidLessThanOrEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("childid <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andChildidIn(List<Long> values) {
            addCriterion("childid in", values, "childid");
            return (Criteria) this;
        }

        public Criteria andChildidNotIn(List<Long> values) {
            addCriterion("childid not in", values, "childid");
            return (Criteria) this;
        }

        public Criteria andChildidBetween(Long value1, Long value2) {
            addCriterion("childid between", value1, value2, "childid");
            return (Criteria) this;
        }

        public Criteria andChildidNotBetween(Long value1, Long value2) {
            addCriterion("childid not between", value1, value2, "childid");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNull() {
            addCriterion("created is null");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNotNull() {
            addCriterion("created is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedEqualTo(LocalDateTime value) {
            addCriterion("created =", value, "created");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andCreatedEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("created = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedNotEqualTo(LocalDateTime value) {
            addCriterion("created <>", value, "created");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andCreatedNotEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("created <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThan(LocalDateTime value) {
            addCriterion("created >", value, "created");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andCreatedGreaterThanColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("created > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("created >=", value, "created");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andCreatedGreaterThanOrEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("created >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedLessThan(LocalDateTime value) {
            addCriterion("created <", value, "created");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andCreatedLessThanColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("created < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("created <=", value, "created");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria andCreatedLessThanOrEqualToColumn(LitemallUserRelations.Column column) {
            addCriterion(new StringBuilder("created <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedIn(List<LocalDateTime> values) {
            addCriterion("created in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotIn(List<LocalDateTime> values) {
            addCriterion("created not in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("created between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("created not between", value1, value2, "created");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_user_relations
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        private LitemallUserRelationsExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        protected Criteria(LitemallUserRelationsExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public LitemallUserRelationsExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_user_relations
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_user_relations
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_relations
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallUserRelationsExample example);
    }
}